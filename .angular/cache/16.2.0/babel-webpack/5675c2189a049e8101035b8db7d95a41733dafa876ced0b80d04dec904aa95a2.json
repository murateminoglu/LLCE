{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.quizStarted = false;\n    this.a = ['all', 'mc', 'sc', 'fi'];\n    this.selectedQuestionCount = 1; // Varsayılan değeri isteğe göre ayarlayın\n    this.selectedQuestionType = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n    this.correctAnswers = 0;\n    this.wrongAnswers = 0;\n    this.unanswered = 0;\n    this.control = true;\n    this.bitti = true;\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n  ngOnInit() {}\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik();\n  }\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll();\n    } else if (this.selectedQuestionType === 'mc') {\n      this.ql101all = this.qs.getallMc();\n    } else if (this.selectedQuestionType === 'fi') {\n      this.ql101all = this.qs.getallFi();\n    } else if (this.selectedQuestionType === 'sc') {\n      this.ql101all = this.qs.getallSc();\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers() {\n    return this.correctAnswers;\n  }\n  calculateWrongAnswers() {\n    return this.wrongAnswers;\n  }\n  calculateUnanswered() {\n    return this.unanswered;\n  }\n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n  bittik() {\n    if (this.selectedQuestionCount == this.currentQuestion) {\n      this.bitti = true;\n    }\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Quiz Completed!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"Your results:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6, \"Correct Answers: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8, \"Wrong Answers: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"Unanswered: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\");\n      i0.ɵɵtext(12, \"Show Answers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\");\n      i0.ɵɵtext(14, \"asdasd\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .question[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .answers[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n  .fill-in[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  .next-button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 20px auto;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .result-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhhbS9leGFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAuYW5zd2VycyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICBcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG4gIFxuICBsaSB7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgLmZpbGwtaW4ge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgXG4gIC5uZXh0LWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5yZXN1bHQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["ExamComponent","constructor","qs","ql101all","currentQuestion","quizStarted","a","selectedQuestionCount","selectedQuestionType","correctAnswers","wrongAnswers","unanswered","control","bitti","getallAll","ngOnInit","startQuiz","filterQuestions","nextQuestion","length","bittik","getallMc","getallFi","getallSc","slice","calculateCorrectAnswers","calculateWrongAnswers","calculateUnanswered","showAnswers","i","question","qtyp","qgiventxt","selectedAnswers","qanswers","filter","ans","givenans","every","correct","i0","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","consts","template","ExamComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["// Eksik olan importları ekleyin\nimport { Component, OnInit } from '@angular/core';\nimport { Qlpic101Service } from '../services/qlpic101.service';\nimport { LceQuery } from '../interfaces/lcequery';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  ql101all: LceQuery[] = [];\n  currentQuestion: number = -1;\n  quizStarted: boolean = false;\n  a: string[]=['all','mc','sc','fi']\n  selectedQuestionCount: number = 1; // Varsayılan değeri isteğe göre ayarlayın\n  selectedQuestionType: string = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n  correctAnswers: number = 0;\n  wrongAnswers: number = 0;\n  unanswered: number = 0;\n  control: boolean=true;\n  bitti :boolean=true;\n\n  constructor(private qs: Qlpic101Service) {\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n\n  ngOnInit() {}\n\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik()\n  }\n\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll()\n    } else if(this.selectedQuestionType === 'mc'){\n      this.ql101all = this.qs.getallMc()      \n    }\n    else if(this.selectedQuestionType === 'fi'){\n      this.ql101all = this.qs.getallFi()\n    }\n    else if(this.selectedQuestionType === 'sc'){\n      this.ql101all = this.qs.getallSc()\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers(): number {\n    return this.correctAnswers;\n  }\n  \n  calculateWrongAnswers(): number {\n    return this.wrongAnswers;\n  }\n  \n  calculateUnanswered(): number {\n    return this.unanswered;\n  }\n  \n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n\n\n  bittik(){\n    if(this.selectedQuestionCount==this.currentQuestion) {\n      this.bitti = true\n    }\n    \n  }\n  \n  \n  \n  \n  \n  \n  \n}\n","\n<!-- <div  class=\"options-container\">\n  <label for=\"questionCount\">Select the number of questions:</label>\n  <input type=\"number\" id=\"questionCount\" [(ngModel)]=\"selectedQuestionCount\" min=\"1\" max=\"{{ ql101all.length }}\">\n  \n  <label for=\"questionType\">Select the question type:</label>\n  <select id=\"questionType\" [(ngModel)]=\"selectedQuestionType\">\n    <option value=\"all\">All</option>\n    <option value=\"mc\">Multiple Choice</option>\n    <option value=\"sc\">Single Choice</option>\n    <option value=\"fi\">Fill-In</option>\n  </select>\n  \n  <button (click)=\"startQuiz()\">Start Quiz</button>\n</div> -->\n\n<!-- <div  class=\"question-container\" *ngIf=\"quizStarted && currentQuestion !== -1 && currentQuestion < selectedQuestionCount\">\n  <div class=\"question\">\n    <p>\n      <span *ngFor=\"let qtext of ql101all[currentQuestion].qtxt\">\n        {{qtext}} \n      </span>\n    </p>    \n  <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n    <ul>\n      <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n        <label>\n          <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n            [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n          {{ answer.txt[0] }}\n        </label>\n      </li>\n    </ul>\n  </div>\n  <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n    <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n  </div>\n</div>\n\n<button class=\"next-button\" (click)=\"nextQuestion()\" *ngIf=\"quizStarted && currentQuestion !== ql101all.length\">Next Question</button> -->\n\n\n<div class=\"\">\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n  <p>Correct Answers: </p>\n  <p>Wrong Answers: </p>\n  <p>Unanswered: </p>\n  <button >Show Answers</button>\n</div>\n\n<div>asdasd</div>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}