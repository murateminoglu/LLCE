{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ExamComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\", 9);\n    i0.ɵɵtext(2, \"Select the number of questions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_0_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectedQuestionCount = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5, \"Select the question type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_0_Template_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedQuestionType = $event);\n    });\n    i0.ɵɵelementStart(7, \"option\", 13);\n    i0.ɵɵtext(8, \"All\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 14);\n    i0.ɵɵtext(10, \"Multiple Choice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 15);\n    i0.ɵɵtext(12, \"Single Choice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 16);\n    i0.ɵɵtext(14, \"Fill-In\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.startQuiz());\n    });\n    i0.ɵɵtext(16, \"Start Quiz\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"max\", ctx_r0.ql101all.length);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedQuestionCount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedQuestionType);\n  }\n}\nfunction ExamComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qtext_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", qtext_r9, \" \");\n  }\n}\nfunction ExamComponent_div_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_5_li_2_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const answer_r11 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(answer_r11.givenans = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"type\", ctx_r10.ql101all[ctx_r10.currentQuestion].qtyp === \"mc\" ? \"checkbox\" : \"radio\");\n    i0.ɵɵproperty(\"ngModel\", answer_r11.givenans);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r11.txt[0], \" \");\n  }\n}\nfunction ExamComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"ul\");\n    i0.ɵɵtemplate(2, ExamComponent_div_5_li_2_Template, 4, 3, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.ql101all[ctx_r2.currentQuestion].qanswers);\n  }\n}\nfunction ExamComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.ql101all[ctx_r15.currentQuestion].qgiventxt = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.ql101all[ctx_r3.currentQuestion].qgiventxt);\n  }\n}\nfunction ExamComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ExamComponent_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.nextQuestion());\n    });\n    i0.ɵɵtext(1, \"Next Question\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.quizStarted = false;\n    this.a = ['all', 'mc', 'sc', 'fi'];\n    this.selectedQuestionCount = 1; // Varsayılan değeri isteğe göre ayarlayın\n    this.selectedQuestionType = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n    this.correctAnswers = 0;\n    this.wrongAnswers = 0;\n    this.unanswered = 0;\n    this.control = true;\n    this.bitti = false;\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n  ngOnInit() {}\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n  }\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll();\n    } else if (this.selectedQuestionType === 'mc') {\n      this.ql101all = this.qs.getallMc();\n    } else if (this.selectedQuestionType === 'fi') {\n      this.ql101all = this.qs.getallFi();\n    } else if (this.selectedQuestionType === 'sc') {\n      this.ql101all = this.qs.getallSc();\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers() {\n    return this.correctAnswers;\n  }\n  calculateWrongAnswers() {\n    return this.wrongAnswers;\n  }\n  calculateUnanswered() {\n    return this.unanswered;\n  }\n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n  bittik() {\n    if (this.selectedQuestionCount === 1) {\n      this.bitti = true;\n    }\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 21,\n  vars: 8,\n  consts: [[\"class\", \"options-container\", 4, \"ngIf\"], [1, \"question-container\"], [1, \"question\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"answers\", 4, \"ngIf\"], [\"class\", \"fill-in\", 4, \"ngIf\"], [\"class\", \"next-button\", 3, \"click\", 4, \"ngIf\"], [3, \"click\"], [1, \"options-container\"], [\"for\", \"questionCount\"], [\"type\", \"number\", \"id\", \"questionCount\", \"min\", \"1\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"for\", \"questionType\"], [\"id\", \"questionType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [\"value\", \"mc\"], [\"value\", \"sc\"], [\"value\", \"fi\"], [1, \"answers\"], [\"name\", \"answerGroup\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [1, \"fill-in\"], [\"type\", \"text\", \"placeholder\", \"Your answer\", 3, \"ngModel\", \"ngModelChange\"], [1, \"next-button\", 3, \"click\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExamComponent_div_0_Template, 17, 3, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"p\");\n      i0.ɵɵtemplate(4, ExamComponent_span_4_Template, 2, 1, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, ExamComponent_div_5_Template, 3, 1, \"div\", 4);\n      i0.ɵɵtemplate(6, ExamComponent_div_6_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ExamComponent_button_7_Template, 2, 0, \"button\", 6);\n      i0.ɵɵelementStart(8, \"div\")(9, \"h2\");\n      i0.ɵɵtext(10, \"Quiz Completed!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12, \"Your results:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ExamComponent_Template_button_click_19_listener() {\n        return ctx.showAnswers();\n      });\n      i0.ɵɵtext(20, \"Show Answers\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ql101all[ctx.currentQuestion].qtxt);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ql101all[ctx.currentQuestion].qtyp === \"mc\" || ctx.ql101all[ctx.currentQuestion].qtyp === \"sc\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ql101all[ctx.currentQuestion].qtyp === \"fi\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.quizStarted && ctx.currentQuestion !== ctx.ql101all.length);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"Correct Answers: \", ctx.calculateCorrectAnswers(), \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Wrong Answers: \", ctx.calculateWrongAnswers(), \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Unanswered: \", ctx.calculateUnanswered(), \"\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel],\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .question[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .answers[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n  .fill-in[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  .next-button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 20px auto;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .result-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhhbS9leGFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAuYW5zd2VycyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICBcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG4gIFxuICBsaSB7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgLmZpbGwtaW4ge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgXG4gIC5uZXh0LWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5yZXN1bHQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ExamComponent_div_0_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","selectedQuestionCount","ExamComponent_div_0_Template_select_ngModelChange_6_listener","ctx_r7","selectedQuestionType","ExamComponent_div_0_Template_button_click_15_listener","ctx_r8","startQuiz","ɵɵadvance","ɵɵpropertyInterpolate","ctx_r0","ql101all","length","ɵɵproperty","ɵɵtextInterpolate1","qtext_r9","ExamComponent_div_5_li_2_Template_input_ngModelChange_2_listener","restoredCtx","_r14","answer_r11","$implicit","givenans","ctx_r10","currentQuestion","qtyp","txt","ɵɵtemplate","ExamComponent_div_5_li_2_Template","ctx_r2","qanswers","ExamComponent_div_6_Template_input_ngModelChange_1_listener","_r16","ctx_r15","qgiventxt","ctx_r3","ExamComponent_button_7_Template_button_click_0_listener","_r18","ctx_r17","nextQuestion","ExamComponent","constructor","qs","quizStarted","a","correctAnswers","wrongAnswers","unanswered","control","bitti","getallAll","ngOnInit","filterQuestions","getallMc","getallFi","getallSc","slice","calculateCorrectAnswers","calculateWrongAnswers","calculateUnanswered","showAnswers","i","question","selectedAnswers","filter","ans","every","correct","bittik","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","consts","template","ExamComponent_Template","rf","ctx","ExamComponent_div_0_Template","ExamComponent_span_4_Template","ExamComponent_div_5_Template","ExamComponent_div_6_Template","ExamComponent_button_7_Template","ExamComponent_Template_button_click_19_listener","qtxt"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["// Eksik olan importları ekleyin\nimport { Component, OnInit } from '@angular/core';\nimport { Qlpic101Service } from '../services/qlpic101.service';\nimport { LceQuery } from '../interfaces/lcequery';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  ql101all: LceQuery[] = [];\n  currentQuestion: number = -1;\n  quizStarted: boolean = false;\n  a: string[]=['all','mc','sc','fi']\n  selectedQuestionCount: number = 1; // Varsayılan değeri isteğe göre ayarlayın\n  selectedQuestionType: string = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n  correctAnswers: number = 0;\n  wrongAnswers: number = 0;\n  unanswered: number = 0;\n  control: boolean=true;\n  bitti :boolean=false;\n\n  constructor(private qs: Qlpic101Service) {\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n\n  ngOnInit() {}\n\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n  }\n\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll()\n    } else if(this.selectedQuestionType === 'mc'){\n      this.ql101all = this.qs.getallMc()      \n    }\n    else if(this.selectedQuestionType === 'fi'){\n      this.ql101all = this.qs.getallFi()\n    }\n    else if(this.selectedQuestionType === 'sc'){\n      this.ql101all = this.qs.getallSc()\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers(): number {\n    return this.correctAnswers;\n  }\n  \n  calculateWrongAnswers(): number {\n    return this.wrongAnswers;\n  }\n  \n  calculateUnanswered(): number {\n    return this.unanswered;\n  }\n  \n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n\n\n  bittik(){\n    if(this.selectedQuestionCount===1) {\n      this.bitti = true\n    }\n    \n  }\n  \n  \n  \n  \n  \n  \n  \n}\n","\n\n<div *ngIf=\"control\" class=\"options-container\">\n  <label for=\"questionCount\">Select the number of questions:</label>\n  <input type=\"number\" id=\"questionCount\" [(ngModel)]=\"selectedQuestionCount\" min=\"1\" max=\"{{ ql101all.length }}\">\n  \n  <label for=\"questionType\">Select the question type:</label>\n  <select id=\"questionType\" [(ngModel)]=\"selectedQuestionType\">\n    <option value=\"all\">All</option>\n    <option value=\"mc\">Multiple Choice</option>\n    <option value=\"sc\">Single Choice</option>\n    <option value=\"fi\">Fill-In</option>\n  </select>\n  \n  <button (click)=\"startQuiz()\">Start Quiz</button>\n</div>\n\n\n<div  class=\"question-container\">\n  <div class=\"question\">\n    <p>\n      <span *ngFor=\"let qtext of ql101all[currentQuestion].qtxt\">\n        {{qtext}} \n      </span>\n    </p>    \n  <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n    <ul>\n      <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n        <label>\n          <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n            [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n          {{ answer.txt[0] }}\n        </label>\n      </li>\n    </ul>\n  </div>\n  <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n    <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n  </div>\n</div>\n\n<button class=\"next-button\" (click)=\"nextQuestion()\" *ngIf=\"quizStarted && currentQuestion !== ql101all.length\">Next Question</button>\n\n\n\n<div >\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n  <p>Correct Answers: {{ calculateCorrectAnswers() }}</p>\n  <p>Wrong Answers: {{ calculateWrongAnswers() }}</p>\n  <p>Unanswered: {{ calculateUnanswered() }}</p>\n  <button (click)=\"showAnswers()\">Show Answers</button>\n</div>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}