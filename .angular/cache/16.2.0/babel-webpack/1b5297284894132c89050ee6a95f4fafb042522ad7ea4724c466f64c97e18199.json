{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ExamComponent_div_31_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qtext_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", qtext_r5, \" \");\n  }\n}\nfunction ExamComponent_div_31_div_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_31_div_4_li_2_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const answer_r7 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(answer_r7.givenans = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"type\", ctx_r6.ql101all[ctx_r6.currentQuestion].qtyp === \"mc\" ? \"checkbox\" : \"radio\");\n    i0.ɵɵproperty(\"ngModel\", answer_r7.givenans);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r7.txt[0], \" \");\n  }\n}\nfunction ExamComponent_div_31_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"ul\");\n    i0.ɵɵtemplate(2, ExamComponent_div_31_div_4_li_2_Template, 4, 3, \"li\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.ql101all[ctx_r2.currentQuestion].qanswers);\n  }\n}\nfunction ExamComponent_div_31_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_31_div_5_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.ql101all[ctx_r11.currentQuestion].qgiventxt = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.ql101all[ctx_r3.currentQuestion].qgiventxt);\n  }\n}\nfunction ExamComponent_div_31_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_31_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.nextQuestion());\n    });\n    i0.ɵɵtext(1, \"Next Question\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ExamComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"p\");\n    i0.ɵɵtemplate(3, ExamComponent_div_31_span_3_Template, 2, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ExamComponent_div_31_div_4_Template, 3, 1, \"div\", 14);\n    i0.ɵɵtemplate(5, ExamComponent_div_31_div_5_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ExamComponent_div_31_button_6_Template, 2, 0, \"button\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"mc\" || ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"sc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"fi\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.quizStarted && ctx_r0.currentQuestion !== ctx_r0.ql101all.length);\n  }\n}\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.quizStarted = false;\n    this.a = ['all', 'mc', 'sc', 'fi'];\n    this.selectedQuestionCount = 1; // Varsayılan değeri isteğe göre ayarlayın\n    this.selectedQuestionType = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n    this.correctAnswers = 0;\n    this.wrongAnswers = 0;\n    this.unanswered = 0;\n    this.control = true;\n    this.bitti = true;\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n  ngOnInit() {}\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik();\n  }\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll();\n    } else if (this.selectedQuestionType === 'mc') {\n      this.ql101all = this.qs.getallMc();\n    } else if (this.selectedQuestionType === 'fi') {\n      this.ql101all = this.qs.getallFi();\n    } else if (this.selectedQuestionType === 'sc') {\n      this.ql101all = this.qs.getallSc();\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers() {\n    return this.correctAnswers;\n  }\n  calculateWrongAnswers() {\n    return this.wrongAnswers;\n  }\n  calculateUnanswered() {\n    return this.unanswered;\n  }\n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n  bittik() {\n    if (this.selectedQuestionCount == this.currentQuestion) {\n      this.bitti = true;\n    }\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 32,\n  vars: 4,\n  consts: [[1, \"options-container\"], [\"for\", \"questionCount\"], [\"type\", \"number\", \"id\", \"questionCount\", \"min\", \"1\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"for\", \"questionType\"], [\"id\", \"questionType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [\"value\", \"mc\"], [\"value\", \"sc\"], [\"value\", \"fi\"], [3, \"click\"], [\"class\", \"question-container\", 4, \"ngIf\"], [1, \"question-container\"], [1, \"question\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"answers\", 4, \"ngIf\"], [\"class\", \"fill-in\", 4, \"ngIf\"], [\"class\", \"next-button\", 3, \"click\", 4, \"ngIf\"], [1, \"answers\"], [\"name\", \"answerGroup\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [1, \"fill-in\"], [\"type\", \"text\", \"placeholder\", \"Your answer\", 3, \"ngModel\", \"ngModelChange\"], [1, \"next-button\", 3, \"click\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Select the number of questions:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.selectedQuestionCount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Select the question type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.selectedQuestionType = $event;\n      });\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Multiple Choice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"Single Choice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 8);\n      i0.ɵɵtext(14, \"Fill-In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ExamComponent_Template_button_click_15_listener() {\n        return ctx.startQuiz();\n      });\n      i0.ɵɵtext(16, \"Start Quiz\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"h2\");\n      i0.ɵɵtext(19, \"Quiz Completed!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\");\n      i0.ɵɵtext(21, \"Your results:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\");\n      i0.ɵɵtext(23, \"Correct Answers: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"p\");\n      i0.ɵɵtext(25, \"Wrong Answers: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"p\");\n      i0.ɵɵtext(27, \"Unanswered: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\");\n      i0.ɵɵtext(29, \"Show Answers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\");\n      i0.ɵɵtemplate(31, ExamComponent_div_31_Template, 7, 4, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"max\", ctx.ql101all.length);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedQuestionCount);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedQuestionType);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", ctx.quizStarted && ctx.currentQuestion !== -1 && ctx.currentQuestion < ctx.selectedQuestionCount);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel],\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .question[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .answers[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n  .fill-in[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  .next-button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 20px auto;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .result-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhhbS9leGFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAuYW5zd2VycyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICBcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG4gIFxuICBsaSB7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgLmZpbGwtaW4ge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgXG4gIC5uZXh0LWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5yZXN1bHQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","qtext_r5","ɵɵlistener","ExamComponent_div_31_div_4_li_2_Template_input_ngModelChange_2_listener","$event","restoredCtx","ɵɵrestoreView","_r10","answer_r7","$implicit","ɵɵresetView","givenans","ɵɵpropertyInterpolate","ctx_r6","ql101all","currentQuestion","qtyp","ɵɵproperty","txt","ɵɵtemplate","ExamComponent_div_31_div_4_li_2_Template","ctx_r2","qanswers","ExamComponent_div_31_div_5_Template_input_ngModelChange_1_listener","_r12","ctx_r11","ɵɵnextContext","qgiventxt","ctx_r3","ExamComponent_div_31_button_6_Template_button_click_0_listener","_r14","ctx_r13","nextQuestion","ExamComponent_div_31_span_3_Template","ExamComponent_div_31_div_4_Template","ExamComponent_div_31_div_5_Template","ExamComponent_div_31_button_6_Template","ctx_r0","qtxt","quizStarted","length","ExamComponent","constructor","qs","a","selectedQuestionCount","selectedQuestionType","correctAnswers","wrongAnswers","unanswered","control","bitti","getallAll","ngOnInit","startQuiz","filterQuestions","bittik","getallMc","getallFi","getallSc","slice","calculateCorrectAnswers","calculateWrongAnswers","calculateUnanswered","showAnswers","i","question","selectedAnswers","filter","ans","every","correct","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","consts","template","ExamComponent_Template","rf","ctx","ExamComponent_Template_input_ngModelChange_3_listener","ExamComponent_Template_select_ngModelChange_6_listener","ExamComponent_Template_button_click_15_listener","ExamComponent_div_31_Template"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["// Eksik olan importları ekleyin\nimport { Component, OnInit } from '@angular/core';\nimport { Qlpic101Service } from '../services/qlpic101.service';\nimport { LceQuery } from '../interfaces/lcequery';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  ql101all: LceQuery[] = [];\n  currentQuestion: number = -1;\n  quizStarted: boolean = false;\n  a: string[]=['all','mc','sc','fi']\n  selectedQuestionCount: number = 1; // Varsayılan değeri isteğe göre ayarlayın\n  selectedQuestionType: string = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n  correctAnswers: number = 0;\n  wrongAnswers: number = 0;\n  unanswered: number = 0;\n  control: boolean=true;\n  bitti :boolean=true;\n\n  constructor(private qs: Qlpic101Service) {\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n\n  ngOnInit() {}\n\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik()\n  }\n\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll()\n    } else if(this.selectedQuestionType === 'mc'){\n      this.ql101all = this.qs.getallMc()      \n    }\n    else if(this.selectedQuestionType === 'fi'){\n      this.ql101all = this.qs.getallFi()\n    }\n    else if(this.selectedQuestionType === 'sc'){\n      this.ql101all = this.qs.getallSc()\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  calculateCorrectAnswers(): number {\n    return this.correctAnswers;\n  }\n  \n  calculateWrongAnswers(): number {\n    return this.wrongAnswers;\n  }\n  \n  calculateUnanswered(): number {\n    return this.unanswered;\n  }\n  \n  showAnswers() {\n    this.correctAnswers = this.wrongAnswers = this.unanswered = 0;\n    for (let i = 0; i < this.ql101all.length; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.unanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.unanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.correctAnswers++;\n        } else {\n          this.wrongAnswers++;\n        }\n      }\n    }\n  }\n\n\n  bittik(){\n    if(this.selectedQuestionCount==this.currentQuestion) {\n      this.bitti = true\n    }\n    \n  }\n  \n  \n  \n  \n  \n  \n  \n}\n","\n<div  class=\"options-container\">\n  <label for=\"questionCount\">Select the number of questions:</label>\n  <input type=\"number\" id=\"questionCount\" [(ngModel)]=\"selectedQuestionCount\" min=\"1\" max=\"{{ ql101all.length }}\">\n  \n  <label for=\"questionType\">Select the question type:</label>\n  <select id=\"questionType\" [(ngModel)]=\"selectedQuestionType\">\n    <option value=\"all\">All</option>\n    <option value=\"mc\">Multiple Choice</option>\n    <option value=\"sc\">Single Choice</option>\n    <option value=\"fi\">Fill-In</option>\n  </select>\n  \n  <button (click)=\"startQuiz()\">Start Quiz</button>\n</div>\n\n\n<div>\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n  <p>Correct Answers: </p>\n  <p>Wrong Answers: </p>\n  <p>Unanswered: </p>\n  <button >Show Answers</button>\n</div>\n\n<div>\n  <div  class=\"question-container\" *ngIf=\"quizStarted && currentQuestion !== -1 && currentQuestion < selectedQuestionCount\">\n    <div class=\"question\">\n      <p>\n        <span *ngFor=\"let qtext of ql101all[currentQuestion].qtxt\">\n          {{qtext}} \n        </span>\n      </p>    \n    <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n      <ul>\n        <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n          <label>\n            <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n              [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n            {{ answer.txt[0] }}\n          </label>\n        </li>\n      </ul>\n    </div>\n    <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n      <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n    </div>\n  </div>\n  \n  <button class=\"next-button\" (click)=\"nextQuestion()\" *ngIf=\"quizStarted && currentQuestion !== ql101all.length\">Next Question</button>\n  \n  \n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}