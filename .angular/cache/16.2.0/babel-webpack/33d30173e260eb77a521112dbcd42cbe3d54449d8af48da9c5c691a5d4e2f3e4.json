{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ExamComponent_div_17_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qtext_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", qtext_r6, \" \");\n  }\n}\nfunction ExamComponent_div_17_div_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_17_div_4_li_2_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const answer_r8 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(answer_r8.givenans = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"type\", ctx_r7.ql101all[ctx_r7.currentQuestion].qtyp === \"mc\" ? \"checkbox\" : \"radio\");\n    i0.ɵɵproperty(\"ngModel\", answer_r8.givenans);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r8.txt[0], \" \");\n  }\n}\nfunction ExamComponent_div_17_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"ul\");\n    i0.ɵɵtemplate(2, ExamComponent_div_17_div_4_li_2_Template, 4, 3, \"li\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.ql101all[ctx_r2.currentQuestion].qanswers);\n  }\n}\nfunction ExamComponent_div_17_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_17_div_5_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.ql101all[ctx_r12.currentQuestion].qgiventxt = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.ql101all[ctx_r3.currentQuestion].qgiventxt);\n  }\n}\nfunction ExamComponent_div_17_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"h2\");\n    i0.ɵɵtext(2, \"Quiz Completed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Your results:\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ExamComponent_div_17_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_17_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.nextQuestion());\n    });\n    i0.ɵɵtext(1, \"Next Question\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ExamComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"p\");\n    i0.ɵɵtemplate(3, ExamComponent_div_17_span_3_Template, 2, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ExamComponent_div_17_div_4_Template, 3, 1, \"div\", 14);\n    i0.ɵɵtemplate(5, ExamComponent_div_17_div_5_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ExamComponent_div_17_div_6_Template, 5, 0, \"div\", 16);\n    i0.ɵɵtemplate(7, ExamComponent_div_17_button_7_Template, 2, 0, \"button\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"mc\" || ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"sc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ql101all[ctx_r0.currentQuestion].qtyp === \"fi\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.quizStarted && ctx_r0.currentQuestion === ctx_r0.selectedQuestionCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.quizStarted && ctx_r0.currentQuestion !== ctx_r0.ql101all.length);\n  }\n}\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.quizStarted = false;\n    this.a = ['all', 'mc', 'sc', 'fi'];\n    this.selectedQuestionCount = 1; // Varsayılan değeri isteğe göre ayarlayın\n    this.selectedQuestionType = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n  ngOnInit() {}\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n  }\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll();\n    } else if (this.selectedQuestionType === 'mc') {\n      this.ql101all = this.qs.getallMc();\n    } else if (this.selectedQuestionType === 'fi') {\n      this.ql101all = this.qs.getallFi();\n    } else if (this.selectedQuestionType === 'sc') {\n      this.ql101all = this.qs.getallSc();\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"options-container\"], [\"for\", \"questionCount\"], [\"type\", \"number\", \"id\", \"questionCount\", \"min\", \"1\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"for\", \"questionType\"], [\"id\", \"questionType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [\"value\", \"mc\"], [\"value\", \"sc\"], [\"value\", \"fi\"], [3, \"click\"], [\"class\", \"question-container\", 4, \"ngIf\"], [1, \"question-container\"], [1, \"question\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"answers\", 4, \"ngIf\"], [\"class\", \"fill-in\", 4, \"ngIf\"], [\"class\", \"result-container\", 4, \"ngIf\"], [\"class\", \"next-button\", 3, \"click\", 4, \"ngIf\"], [1, \"answers\"], [\"name\", \"answerGroup\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [1, \"fill-in\"], [\"type\", \"text\", \"placeholder\", \"Your answer\", 3, \"ngModel\", \"ngModelChange\"], [1, \"result-container\"], [1, \"next-button\", 3, \"click\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Select the number of questions:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.selectedQuestionCount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Select the question type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.selectedQuestionType = $event;\n      });\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Multiple Choice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"Single Choice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 8);\n      i0.ɵɵtext(14, \"Fill-In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ExamComponent_Template_button_click_15_listener() {\n        return ctx.startQuiz();\n      });\n      i0.ɵɵtext(16, \"Start Quiz\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, ExamComponent_div_17_Template, 8, 5, \"div\", 10);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"max\", ctx.ql101all.length);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedQuestionCount);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedQuestionType);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.quizStarted && ctx.currentQuestion !== -1 && ctx.currentQuestion < ctx.selectedQuestionCount);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel],\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .question[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .answers[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n  .fill-in[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  .next-button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 20px auto;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .result-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhhbS9leGFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAuYW5zd2VycyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICBcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG4gIFxuICBsaSB7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgLmZpbGwtaW4ge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgXG4gIC5uZXh0LWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5yZXN1bHQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","qtext_r6","ɵɵlistener","ExamComponent_div_17_div_4_li_2_Template_input_ngModelChange_2_listener","$event","restoredCtx","ɵɵrestoreView","_r11","answer_r8","$implicit","ɵɵresetView","givenans","ɵɵpropertyInterpolate","ctx_r7","ql101all","currentQuestion","qtyp","ɵɵproperty","txt","ɵɵtemplate","ExamComponent_div_17_div_4_li_2_Template","ctx_r2","qanswers","ExamComponent_div_17_div_5_Template_input_ngModelChange_1_listener","_r13","ctx_r12","ɵɵnextContext","qgiventxt","ctx_r3","ExamComponent_div_17_button_7_Template_button_click_0_listener","_r15","ctx_r14","nextQuestion","ExamComponent_div_17_span_3_Template","ExamComponent_div_17_div_4_Template","ExamComponent_div_17_div_5_Template","ExamComponent_div_17_div_6_Template","ExamComponent_div_17_button_7_Template","ctx_r0","qtxt","quizStarted","selectedQuestionCount","length","ExamComponent","constructor","qs","a","selectedQuestionType","getallAll","ngOnInit","startQuiz","filterQuestions","getallMc","getallFi","getallSc","slice","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","consts","template","ExamComponent_Template","rf","ctx","ExamComponent_Template_input_ngModelChange_3_listener","ExamComponent_Template_select_ngModelChange_6_listener","ExamComponent_Template_button_click_15_listener","ExamComponent_div_17_Template"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["// Eksik olan importları ekleyin\nimport { Component, OnInit } from '@angular/core';\nimport { Qlpic101Service } from '../services/qlpic101.service';\nimport { LceQuery } from '../interfaces/lcequery';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  ql101all: LceQuery[] = [];\n  currentQuestion: number = -1;\n  quizStarted: boolean = false;\n  a: string[]=['all','mc','sc','fi']\n  selectedQuestionCount: number = 1; // Varsayılan değeri isteğe göre ayarlayın\n  selectedQuestionType: string = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n\n  constructor(private qs: Qlpic101Service) {\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n  }\n\n  ngOnInit() {}\n\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n  }\n\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll()\n    } else if(this.selectedQuestionType === 'mc'){\n      this.ql101all = this.qs.getallMc()      \n    }\n    else if(this.selectedQuestionType === 'fi'){\n      this.ql101all = this.qs.getallFi()\n    }\n    else if(this.selectedQuestionType === 'sc'){\n      this.ql101all = this.qs.getallSc()\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n}\n","<!-- <div class=\"question-container\" *ngIf=\"currentQuestion !== -1 && currentQuestion < ql101all.length\">\n  <div class=\"question\">\n    <p>{{ ql101all[currentQuestion].qtxt[0] }}</p>\n    <p>{{ ql101all[currentQuestion].qtxt[1] }}</p>\n  </div>\n  <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n    <ul>\n      <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n        <label>\n          <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n            [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n          {{ answer.txt[0] }}\n        </label>\n      </li>\n    </ul>\n  </div>\n  <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n    <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n  </div>\n</div> -->\n<!-- <div class=\"result-container\" *ngIf=\"currentQuestion === ql101all.length\">\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n Include your result evaluation logic here -->\n<!-- </div> --> \n<!-- <button class=\"next-button\" (click)=\"nextQuestion()\" *ngIf=\"currentQuestion !== ql101all.length\">Next Question</button> -->\n<div class=\"options-container\">\n  <label for=\"questionCount\">Select the number of questions:</label>\n  <input type=\"number\" id=\"questionCount\" [(ngModel)]=\"selectedQuestionCount\" min=\"1\" max=\"{{ ql101all.length }}\">\n  \n  <label for=\"questionType\">Select the question type:</label>\n  <select id=\"questionType\" [(ngModel)]=\"selectedQuestionType\">\n    <option value=\"all\">All</option>\n    <option value=\"mc\">Multiple Choice</option>\n    <option value=\"sc\">Single Choice</option>\n    <option value=\"fi\">Fill-In</option>\n  </select>\n  \n  <button (click)=\"startQuiz()\">Start Quiz</button>\n</div>\n\n<div class=\"question-container\" *ngIf=\"quizStarted && currentQuestion !== -1 && currentQuestion < selectedQuestionCount\">\n  <div class=\"question\">\n    <!-- <p>{{ ql101all[selectedQuestionCount].qtxt[0] }}</p>\n    <p>{{ ql101all[selectedQuestionCount].qtxt[1] }}</p> -->\n    <p>\n      <span *ngFor=\"let qtext of ql101all[currentQuestion].qtxt\">\n        {{qtext}} \n      </span>\n    </p>\n    <!-- <p>{{ ql101all[currentQuestion].qtxt[0] }}</p>\n    <p>{{ ql101all[currentQuestion].qtxt[1] }}</p>\n  </div> -->\n  <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n    <ul>\n      <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n        <label>\n          <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n            [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n          {{ answer.txt[0] }}\n        </label>\n      </li>\n    </ul>\n  </div>\n  <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n    <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n  </div>\n</div>\n\n<div class=\"result-container\" *ngIf=\"quizStarted && currentQuestion === selectedQuestionCount\">\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n  <!-- Include your result evaluation logic here -->\n</div>\n\n<button class=\"next-button\" (click)=\"nextQuestion()\" *ngIf=\"quizStarted && currentQuestion !== ql101all.length\">Next Question</button>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}