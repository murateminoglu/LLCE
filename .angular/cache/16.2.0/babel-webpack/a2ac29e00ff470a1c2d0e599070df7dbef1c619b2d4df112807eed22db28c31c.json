{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.ql101all = this.qs.getallAll();\n    // this.ql101all.map(q=>{q.qtyp=='mc';q.qanswers.map(a=>a.givenans=false)})\n    // this.ql101all.map(q=>{q.qtyp=='sc';q.qanswers.map(a=>a.givenans=false)})\n    // this.ql101all.map(q=>{q.qtyp=='fi';q.qgiventxt=''})\n    this.currentQuestion = 0;\n    this.question = this.ql101all[this.currentQuestion];\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 2,\n  vars: 1,\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.question.qtxt, \" \");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ExamComponent","constructor","qs","ql101all","currentQuestion","getallAll","question","i0","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","template","ExamComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","qtxt"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { McQuery } from '../interfaces/mc-query';\nimport { Statistics } from '../interfaces/statistics';\nimport { Qlpic101Service } from '../services/qlpic101.service';\n// import { StatsService } from '../services/stats.service';\nimport { ScQuery } from '../interfaces/sc-query';\nimport { FiQuery } from '../interfaces/fi-query';\nimport { LceQuery } from '../interfaces/lcequery';\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent  {\n  ql101all: LceQuery[] = []\n  question: LceQuery\n  currentQuestion: number=-1\n\n\n  constructor(private qs: Qlpic101Service){\n    this.ql101all=this.qs.getallAll()\n    // this.ql101all.map(q=>{q.qtyp=='mc';q.qanswers.map(a=>a.givenans=false)})\n    // this.ql101all.map(q=>{q.qtyp=='sc';q.qanswers.map(a=>a.givenans=false)})\n    // this.ql101all.map(q=>{q.qtyp=='fi';q.qgiventxt=''})\n    this.currentQuestion=0\n    this.question=this.ql101all[this.currentQuestion]\n\n    \n\n  }\n  // nextQuestion() {\n  //   if (this.currentQuestion < this.ql101all.length - 1) {\n  //     this.currentQuestion++;\n  //     this.question = this.ql101all[this.currentQuestion];\n  //     this.resetGivenAnswers();\n  //   } else {\n  //     // Tüm soruları geçtiğimizde yapılacak işlemler burada olabilir.\n  //     // Örneğin, sonuçları değerlendirme veya başka bir işlem yapma.\n  //     console.log(\"Tüm soruları tamamladınız!\");\n  //   }\n  // }\n  \n  // resetGivenAnswers() {\n  //   this.question.qanswers.forEach(answer => {\n  //     answer.givenans = false;\n  //   });\n  //   this.question.qgiventxt = '';\n  // }\n  \n \n\n}","\n<div >{{question.qtxt}}\n  <!-- <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\" nextQuestion()\" >next</button> -->\n</div>\n\n"],"mappings":";;;AAaA,OAAM,MAAOA,aAAa;EAMxBC,YAAoBC,EAAmB;IAAnB,KAAAA,EAAE,GAAFA,EAAE;IALtB,KAAAC,QAAQ,GAAe,EAAE;IAEzB,KAAAC,eAAe,GAAS,CAAC,CAAC;IAIxB,IAAI,CAACD,QAAQ,GAAC,IAAI,CAACD,EAAE,CAACG,SAAS,EAAE;IACjC;IACA;IACA;IACA,IAAI,CAACD,eAAe,GAAC,CAAC;IACtB,IAAI,CAACE,QAAQ,GAAC,IAAI,CAACH,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC;EAInD;;SAhBWJ,aAAa;;mBAAbA,MAAa,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;;QAAbV,MAAa;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ1BT,EAAA,CAAAW,cAAA,UAAM;MAAAX,EAAA,CAAAY,MAAA,GACJ;MACFZ,EAAA,CAAAa,YAAA,EAAM;;;MAFAb,EAAA,CAAAc,SAAA,GACJ;MADId,EAAA,CAAAe,kBAAA,KAAAL,GAAA,CAAAX,QAAA,CAAAiB,IAAA,MACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}