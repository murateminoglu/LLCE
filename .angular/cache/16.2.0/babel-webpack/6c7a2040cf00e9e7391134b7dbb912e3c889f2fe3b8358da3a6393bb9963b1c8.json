{"ast":null,"code":"var _class;\nimport * as qlpic101allJson from \"../../assets/LPI-2019-1-101d-QA-all.json\";\nimport * as qlpic101mcJson from \"../../assets/LPI-2019-1-101d-QA-mc.json\";\nimport * as qlpic101scJson from \"../../assets/LPI-2019-1-101d-QA-sc.json\";\nimport * as qlpic101fiJson from \"../../assets/LPI-2019-1-101d-QA-fi.json\";\nimport * as i0 from \"@angular/core\";\nexport class Qlpic101Service {\n  constructor() {\n    this.qlpic101all = qlpic101allJson;\n    this.qlpic101mc = qlpic101mcJson;\n    this.qlpic101sc = qlpic101scJson;\n    this.qlpic101fi = qlpic101fiJson;\n    this.qlpic101all = qlpic101allJson;\n    this.qlpic101mc = qlpic101mcJson;\n    this.qlpic101sc = qlpic101scJson;\n    this.qlpic101fi = qlpic101fiJson;\n  }\n  ngOnInit() {\n    this.qlpic101all = qlpic101allJson;\n    this.qlpic101mc = qlpic101mcJson;\n    this.qlpic101sc = qlpic101scJson;\n    this.qlpic101fi = qlpic101fiJson;\n  }\n  initGivenAnswers() {\n    try {\n      this.qlpic101mc.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101sc.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101fi.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101fi.map(q => q.qgiventxt = '');\n      // now for all qtyp mixed\n      this.qlpic101all.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101all.map(q => q.qgiventxt = '');\n    } catch (error) {\n      console.error(\"Error in initGivenAnswers():\", error);\n    }\n  }\n  getallAll() {\n    return this.qlpic101all;\n  }\n  getallMc() {\n    return this.qlpic101mc;\n  }\n  getallSc() {\n    return this.qlpic101sc;\n  }\n  getallFi() {\n    return this.qlpic101fi;\n  }\n}\n_class = Qlpic101Service;\n_class.ɵfac = function Qlpic101Service_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["qlpic101allJson","qlpic101mcJson","qlpic101scJson","qlpic101fiJson","Qlpic101Service","constructor","qlpic101all","qlpic101mc","qlpic101sc","qlpic101fi","ngOnInit","initGivenAnswers","map","q","qanswers","a","givenans","qgiventxt","error","console","getallAll","getallMc","getallSc","getallFi","factory","ɵfac","providedIn"],"sources":["/home/semus/Schreibtisch/2108/src/app/services/qlpic101.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\n\nimport * as qlpic101allJson from \"../../assets/LPI-2019-1-101d-QA-all.json\";\nimport { LceQuery} from '../interfaces/lcequery';\nimport * as qlpic101mcJson from \"../../assets/LPI-2019-1-101d-QA-mc.json\";\nimport { McQuery } from '../interfaces/mc-query';\nimport * as qlpic101scJson from \"../../assets/LPI-2019-1-101d-QA-sc.json\";\nimport { ScQuery } from '../interfaces/sc-query';\nimport * as qlpic101fiJson from \"../../assets/LPI-2019-1-101d-QA-fi.json\";\nimport { FiQuery } from '../interfaces/fi-query';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Qlpic101Service implements OnInit {\n  qlpic101all: LceQuery[] = qlpic101allJson\n  qlpic101mc: McQuery[] = qlpic101mcJson\n  qlpic101sc: ScQuery[] = qlpic101scJson\n  qlpic101fi: FiQuery[] = qlpic101fiJson\n\n  constructor() {\n    this.qlpic101all = qlpic101allJson\n    this.qlpic101mc = qlpic101mcJson\n    this.qlpic101sc = qlpic101scJson\n    this.qlpic101fi = qlpic101fiJson\n  }\n\n  ngOnInit(): void {\n    this.qlpic101all = qlpic101allJson\n    this.qlpic101mc = qlpic101mcJson\n    this.qlpic101sc = qlpic101scJson\n    this.qlpic101fi = qlpic101fiJson\n  }\n\n\n\n  initGivenAnswers() {\n    try {\n      this.qlpic101mc.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101sc.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101fi.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101fi.map(q => q.qgiventxt = '');\n      // now for all qtyp mixed\n      this.qlpic101all.map(q => q.qanswers.map(a => a.givenans = false));\n      this.qlpic101all.map(q => q.qgiventxt = '');\n    } catch (error) {\n      console.error(\"Error in initGivenAnswers():\", error);\n    }\n  }\n  \n\n  getallAll(): LceQuery[] {\n    return this.qlpic101all\n  }\n\n  getallMc(): McQuery[] {\n    return this.qlpic101mc\n  }\n\n  getallSc(): ScQuery[] {\n    return this.qlpic101sc\n  }\n\n  getallFi(): FiQuery[] {\n    return this.qlpic101fi\n  }\n\n}\n"],"mappings":";AAEA,OAAO,KAAKA,eAAe,MAAM,0CAA0C;AAE3E,OAAO,KAAKC,cAAc,MAAM,yCAAyC;AAEzE,OAAO,KAAKC,cAAc,MAAM,yCAAyC;AAEzE,OAAO,KAAKC,cAAc,MAAM,yCAAyC;;AAQzE,OAAM,MAAOC,eAAe;EAM1BC,YAAA;IALA,KAAAC,WAAW,GAAeN,eAAe;IACzC,KAAAO,UAAU,GAAcN,cAAc;IACtC,KAAAO,UAAU,GAAcN,cAAc;IACtC,KAAAO,UAAU,GAAcN,cAAc;IAGpC,IAAI,CAACG,WAAW,GAAGN,eAAe;IAClC,IAAI,CAACO,UAAU,GAAGN,cAAc;IAChC,IAAI,CAACO,UAAU,GAAGN,cAAc;IAChC,IAAI,CAACO,UAAU,GAAGN,cAAc;EAClC;EAEAO,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,GAAGN,eAAe;IAClC,IAAI,CAACO,UAAU,GAAGN,cAAc;IAChC,IAAI,CAACO,UAAU,GAAGN,cAAc;IAChC,IAAI,CAACO,UAAU,GAAGN,cAAc;EAClC;EAIAQ,gBAAgBA,CAAA;IACd,IAAI;MACF,IAAI,CAACJ,UAAU,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;MACjE,IAAI,CAACR,UAAU,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;MACjE,IAAI,CAACP,UAAU,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;MACjE,IAAI,CAACP,UAAU,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,SAAS,GAAG,EAAE,CAAC;MAC1C;MACA,IAAI,CAACX,WAAW,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;MAClE,IAAI,CAACV,WAAW,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,SAAS,GAAG,EAAE,CAAC;KAC5C,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;;EAExD;EAGAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACd,WAAW;EACzB;EAEAe,QAAQA,CAAA;IACN,OAAO,IAAI,CAACd,UAAU;EACxB;EAEAe,QAAQA,CAAA;IACN,OAAO,IAAI,CAACd,UAAU;EACxB;EAEAe,QAAQA,CAAA;IACN,OAAO,IAAI,CAACd,UAAU;EACxB;;SAnDWL,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAoB,OAAA,EAAfpB,MAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}