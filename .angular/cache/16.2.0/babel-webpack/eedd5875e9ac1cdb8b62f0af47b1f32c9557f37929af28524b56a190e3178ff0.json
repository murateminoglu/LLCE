{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ExamComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 4);\n    i0.ɵɵtext(2, \"Select the number of questions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_0_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectedQuestionCount = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Select the question type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_0_Template_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectedQuestionType = $event);\n    });\n    i0.ɵɵelementStart(7, \"option\", 8);\n    i0.ɵɵtext(8, \"All\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 9);\n    i0.ɵɵtext(10, \"Multiple Choice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 10);\n    i0.ɵɵtext(12, \"Single Choice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 11);\n    i0.ɵɵtext(14, \"Fill-In\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.startQuiz());\n    });\n    i0.ɵɵtext(16, \"Start Quiz\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"max\", ctx_r0.ql101all.length);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedQuestionCount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedQuestionType);\n  }\n}\nfunction ExamComponent_div_1_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction ExamComponent_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ExamComponent_div_1_span_4_span_2_Template, 1, 0, \"span\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qtext_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", qtext_r10, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r11 !== ctx_r7.ql101all[ctx_r7.currentQuestion].qtxt.length - 1);\n  }\n}\nfunction ExamComponent_div_1_div_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_1_div_5_li_2_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const answer_r14 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(answer_r14.givenans = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const answer_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"type\", ctx_r13.ql101all[ctx_r13.currentQuestion].qtyp === \"mc\" ? \"checkbox\" : \"radio\");\n    i0.ɵɵproperty(\"ngModel\", answer_r14.givenans);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", answer_r14.txt[0], \" \");\n  }\n}\nfunction ExamComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"ul\");\n    i0.ɵɵtemplate(2, ExamComponent_div_1_div_5_li_2_Template, 4, 3, \"li\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.ql101all[ctx_r8.currentQuestion].qanswers);\n  }\n}\nfunction ExamComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function ExamComponent_div_1_div_6_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.ql101all[ctx_r18.currentQuestion].qgiventxt = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r9.ql101all[ctx_r9.currentQuestion].qgiventxt);\n  }\n}\nfunction ExamComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 13)(2, \"div\", 14)(3, \"p\");\n    i0.ɵɵtemplate(4, ExamComponent_div_1_span_4_Template, 3, 2, \"span\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, ExamComponent_div_1_div_5_Template, 3, 1, \"div\", 16);\n    i0.ɵɵtemplate(6, ExamComponent_div_1_div_6_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementStart(7, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_1_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.nextQuestion());\n    });\n    i0.ɵɵtext(8, \"Next Question\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ql101all[ctx_r1.currentQuestion].qtxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ql101all[ctx_r1.currentQuestion].qtyp === \"mc\" || ctx_r1.ql101all[ctx_r1.currentQuestion].qtyp === \"sc\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ql101all[ctx_r1.currentQuestion].qtyp === \"fi\");\n  }\n}\nfunction ExamComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"h2\");\n    i0.ɵɵtext(2, \"Quiz Completed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Your results:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Correct Answers: \", ctx_r2.stats.qcorrect, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Wrong Answers: \", ctx_r2.stats.qwrong, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Unanswered: \", ctx_r2.stats.qnotanswered, \"\");\n  }\n}\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.quizStarted = false;\n    this.selectedQuestionCount = 1; // Varsayılan değeri isteğe göre ayarlayın\n    this.selectedQuestionType = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n    this.correctAnswers = 0;\n    this.wrongAnswers = 0;\n    this.unanswered = 0;\n    this.control = true;\n    this.bitti = false;\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n    this.stats = {\n      qmaxnumber: 0,\n      qanswered: 0,\n      qwrong: 0,\n      qcorrect: 0,\n      qnotanswered: 0\n    };\n  }\n  ngOnInit() {}\n  nullStats() {\n    this.stats.qmaxnumber = 0;\n    this.stats.qanswered = 0;\n    this.stats.qwrong = 0;\n    this.stats.qcorrect = 0;\n    this.stats.qnotanswered = 0;\n  }\n  resetStatsAll() {\n    this.nullStats();\n    return this.calcStatsAll();\n  }\n  calcStatsAll() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.selectedQuestionCount;\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    let mcs = this.ql101all.filter(q => q.qtyp === 'mc').filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length;\n    let scs = this.ql101all.filter(q => q.qtyp === 'sc').filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length;\n    let fis = this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qgiventxt != '').length;\n    this.stats.qanswered = mcs + scs + fis;\n    console.log(mcs, scs, fis);\n    // // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - mcs - scs - fis;\n    // // correct answered\n    // mcs not correct\n    let notcorrectmcs = this.ql101all.filter(q => q.qtyp === 'mc').filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length;\n    console.log('mcs n c:', notcorrectmcs);\n    // scs not correct\n    let notcorrectscs = this.ql101all.filter(q => q.qtyp === 'sc').filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length;\n    console.log('scs n c:', notcorrectscs);\n    // fis not correct\n    let notcorrectfis = this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qanswers.findIndex(a => a.txt.find(t => t === q.qgiventxt))).length;\n    console.log('fis n c:', notcorrectfis);\n    this.stats.qcorrect = this.stats.qmaxnumber - notcorrectmcs - notcorrectscs - notcorrectfis;\n    // // wrong answered\n    this.stats.qwrong = this.stats.qnotanswered - (notcorrectmcs + notcorrectscs + notcorrectfis);\n    return this.stats;\n  }\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik();\n  }\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll();\n    } else if (this.selectedQuestionType === 'mc') {\n      this.ql101all = this.qs.getallMc();\n    } else if (this.selectedQuestionType === 'fi') {\n      this.ql101all = this.qs.getallFi();\n    } else if (this.selectedQuestionType === 'sc') {\n      this.ql101all = this.qs.getallSc();\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n  showAnswers() {\n    this.resetStatsAll(); // İstatistikleri sıfırla ve yeniden hesapla\n    for (let i = 0; i < this.selectedQuestionCount; i++) {\n      const question = this.ql101all[i];\n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.stats.qnotanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n        if (selectedAnswers.length === 0) {\n          this.stats.qnotanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.stats.qcorrect++;\n        } else {\n          this.stats.qwrong++;\n        }\n      }\n    }\n  }\n  bittik() {\n    if (this.selectedQuestionCount == this.currentQuestion) {\n      this.bitti = true;\n    }\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[\"class\", \"options-container\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"result-container\", 4, \"ngIf\"], [1, \"options-container\"], [\"for\", \"questionCount\"], [\"type\", \"number\", \"id\", \"questionCount\", \"min\", \"1\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"for\", \"questionType\"], [\"id\", \"questionType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"all\"], [\"value\", \"mc\"], [\"value\", \"sc\"], [\"value\", \"fi\"], [3, \"click\"], [1, \"question-container\"], [1, \"question\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"answers\", 4, \"ngIf\"], [\"class\", \"fill-in\", 4, \"ngIf\"], [1, \"next-button\", 3, \"click\"], [1, \"answers\"], [\"name\", \"answerGroup\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [1, \"fill-in\"], [\"type\", \"text\", \"placeholder\", \"Your answer\", 3, \"ngModel\", \"ngModelChange\"], [1, \"result-container\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ExamComponent_div_0_Template, 17, 3, \"div\", 0);\n      i0.ɵɵtemplate(1, ExamComponent_div_1_Template, 9, 3, \"div\", 1);\n      i0.ɵɵtemplate(2, ExamComponent_div_2_Template, 11, 3, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.quizStarted && ctx.currentQuestion !== -1 && ctx.currentQuestion < ctx.selectedQuestionCount);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bitti);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel],\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .question[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .answers[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 0;\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin: 5px 0;\\n  }\\n  \\n  .fill-in[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n  }\\n  \\n  .next-button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 20px auto;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .result-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhhbS9leGFtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIFxuICAuYW5zd2VycyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICBcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG4gIFxuICBsaSB7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgLmZpbGwtaW4ge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgXG4gIC5uZXh0LWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgXG4gIC5yZXN1bHQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ExamComponent_div_0_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","selectedQuestionCount","ExamComponent_div_0_Template_select_ngModelChange_6_listener","ctx_r5","selectedQuestionType","ExamComponent_div_0_Template_button_click_15_listener","ctx_r6","startQuiz","ɵɵadvance","ɵɵpropertyInterpolate","ctx_r0","ql101all","length","ɵɵproperty","ɵɵelement","ɵɵtemplate","ExamComponent_div_1_span_4_span_2_Template","ɵɵtextInterpolate1","qtext_r10","i_r11","ctx_r7","currentQuestion","qtxt","ExamComponent_div_1_div_5_li_2_Template_input_ngModelChange_2_listener","restoredCtx","_r17","answer_r14","$implicit","givenans","ctx_r13","qtyp","txt","ExamComponent_div_1_div_5_li_2_Template","ctx_r8","qanswers","ExamComponent_div_1_div_6_Template_input_ngModelChange_1_listener","_r19","ctx_r18","qgiventxt","ctx_r9","ExamComponent_div_1_span_4_Template","ExamComponent_div_1_div_5_Template","ExamComponent_div_1_div_6_Template","ExamComponent_div_1_Template_button_click_7_listener","_r21","ctx_r20","nextQuestion","ctx_r1","ctx_r2","stats","qcorrect","qwrong","qnotanswered","ExamComponent","constructor","qs","quizStarted","correctAnswers","wrongAnswers","unanswered","control","bitti","getallAll","qmaxnumber","qanswered","ngOnInit","nullStats","resetStatsAll","calcStatsAll","mcs","filter","q","findIndex","a","scs","fis","console","log","notcorrectmcs","correct","notcorrectscs","notcorrectfis","find","t","filterQuestions","bittik","getallMc","getallFi","getallSc","slice","showAnswers","i","question","selectedAnswers","ans","every","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","consts","template","ExamComponent_Template","rf","ctx","ExamComponent_div_0_Template","ExamComponent_div_1_Template","ExamComponent_div_2_Template"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["// Eksik olan importları ekleyin\nimport { Component, OnInit } from '@angular/core';\nimport { Qlpic101Service } from '../services/qlpic101.service';\nimport { LceQuery } from '../interfaces/lcequery';\nimport { Statistics } from '../interfaces/statistics';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  ql101all: LceQuery[] = [];\n  currentQuestion: number = -1;\n  quizStarted: boolean = false;\n  \n  selectedQuestionCount: number = 1; // Varsayılan değeri isteğe göre ayarlayın\n  selectedQuestionType: string = 'all'; // Varsayılan değeri isteğe göre ayarlayın\n  correctAnswers: number = 0;\n  wrongAnswers: number = 0;\n  unanswered: number = 0;\n  control: boolean=true;\n  bitti :boolean=false;\n  stats: Statistics\n\n  constructor(private qs: Qlpic101Service) {\n    // Servisten soruları alıp doldurun\n    this.ql101all = this.qs.getallAll();\n    this.stats = {\n      qmaxnumber: 0,\n      qanswered: 0,\n      qwrong: 0,\n      qcorrect: 0,\n      qnotanswered: 0\n    }\n  }\n\n  ngOnInit() {}\n  nullStats() {\n    this.stats.qmaxnumber = 0;\n    this.stats.qanswered = 0;\n    this.stats.qwrong = 0;\n    this.stats.qcorrect = 0;\n    this.stats.qnotanswered = 0;\n  }\n  resetStatsAll() {\n    this.nullStats()\n    return this.calcStatsAll();\n  }\n  calcStatsAll() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.selectedQuestionCount\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    let mcs =\n      this.ql101all.filter(q => q.qtyp === 'mc').\n        filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length\n\n    let scs =\n      this.ql101all.filter(q => q.qtyp === 'sc')\n        .filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length\n\n    let fis =\n      this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qgiventxt != '').length\n\n    this.stats.qanswered = mcs + scs + fis\n    console.log(mcs, scs, fis)\n\n    // // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - mcs - scs - fis\n\n    // // correct answered\n    // mcs not correct\n    let notcorrectmcs = this.ql101all.filter(q => q.qtyp === 'mc')\n      .filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length\n    console.log('mcs n c:', notcorrectmcs)\n    // scs not correct\n    let notcorrectscs = this.ql101all.filter(q => q.qtyp === 'sc')\n      .filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length\n    console.log('scs n c:', notcorrectscs)\n    // fis not correct\n    let notcorrectfis = this.ql101all.filter(q => q.qtyp === 'fi')\n      .filter(q => q.qanswers.findIndex(a => a.txt.find(t => t === q.qgiventxt))).length\n    console.log('fis n c:', notcorrectfis)\n\n    this.stats.qcorrect = this.stats.qmaxnumber - notcorrectmcs - notcorrectscs - notcorrectfis\n    // // wrong answered\n    this.stats.qwrong = this.stats.qnotanswered - (notcorrectmcs + notcorrectscs + notcorrectfis)\n\n    return this.stats;\n  }\n\n  startQuiz() {\n    this.quizStarted = true;\n    this.currentQuestion = 0;\n    this.filterQuestions();\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n    }\n    this.bittik()\n  }\n\n  filterQuestions() {\n    if (this.selectedQuestionType === 'all') {\n      this.ql101all = this.qs.getallAll()\n    } else if(this.selectedQuestionType === 'mc'){\n      this.ql101all = this.qs.getallMc()      \n    }\n    else if(this.selectedQuestionType === 'fi'){\n      this.ql101all = this.qs.getallFi()\n    }\n    else if(this.selectedQuestionType === 'sc'){\n      this.ql101all = this.qs.getallSc()\n    }\n    this.ql101all = this.ql101all.slice(0, this.selectedQuestionCount);\n  }\n\n  showAnswers() {\n    this.resetStatsAll(); // İstatistikleri sıfırla ve yeniden hesapla\n  \n    for (let i = 0; i < this.selectedQuestionCount; i++) {\n      const question = this.ql101all[i];\n  \n      if (question.qtyp === 'fi') {\n        if (!question.qgiventxt) {\n          this.stats.qnotanswered++;\n        }\n      } else {\n        const selectedAnswers = question.qanswers.filter(ans => ans.givenans);\n  \n        if (selectedAnswers.length === 0) {\n          this.stats.qnotanswered++;\n        } else if (selectedAnswers.every(ans => ans.correct)) {\n          this.stats.qcorrect++;\n        } else {\n          this.stats.qwrong++;\n        }\n      }\n    }\n  }\n  \n\n  \n  \n\n\n  bittik(){\n    if(this.selectedQuestionCount==this.currentQuestion) {\n      this.bitti = true\n    }\n    \n  }\n  \n  \n  \n  \n  \n  \n  \n}\n","<div *ngIf=\"control\" class=\"options-container\">\n  <label for=\"questionCount\">Select the number of questions:</label>\n  <input type=\"number\" id=\"questionCount\" [(ngModel)]=\"selectedQuestionCount\" min=\"1\" max=\"{{ ql101all.length }}\">\n  \n  <label for=\"questionType\">Select the question type:</label>\n  <select id=\"questionType\" [(ngModel)]=\"selectedQuestionType\">\n    <option value=\"all\">All</option>\n    <option value=\"mc\">Multiple Choice</option>\n    <option value=\"sc\">Single Choice</option>\n    <option value=\"fi\">Fill-In</option>\n  </select>\n  \n  <button (click)=\"startQuiz()\">Start Quiz</button>\n</div>\n\n<div *ngIf=\"quizStarted && currentQuestion !== -1 && currentQuestion < selectedQuestionCount\">\n  <div class=\"question-container\">\n    <div class=\"question\">\n      <p>\n        <span *ngFor=\"let qtext of ql101all[currentQuestion].qtxt; let i = index\">\n          {{ qtext }}<span *ngIf=\"i !== ql101all[currentQuestion].qtxt.length - 1\"> </span>\n        </span>\n      </p>\n    </div>\n    <div class=\"answers\" *ngIf=\"ql101all[currentQuestion].qtyp === 'mc' || ql101all[currentQuestion].qtyp === 'sc'\">\n      <ul>\n        <li *ngFor=\"let answer of ql101all[currentQuestion].qanswers; let j = index\">\n          <label>\n            <input type=\"{{ ql101all[currentQuestion].qtyp === 'mc' ? 'checkbox' : 'radio' }}\"\n              [(ngModel)]=\"answer.givenans\" name=\"answerGroup\">\n            {{ answer.txt[0] }}\n          </label>\n        </li>\n      </ul>\n    </div>\n    <div class=\"fill-in\" *ngIf=\"ql101all[currentQuestion].qtyp === 'fi'\">\n      <input type=\"text\" [(ngModel)]=\"ql101all[currentQuestion].qgiventxt\" placeholder=\"Your answer\">\n    </div>\n    <button class=\"next-button\" (click)=\"nextQuestion()\">Next Question</button>\n  </div>\n</div>\n\n<div class=\"result-container\" *ngIf=\"bitti\">\n  <h2>Quiz Completed!</h2>\n  <p>Your results:</p>\n  <p>Correct Answers: {{ stats.qcorrect }}</p>\n  <p>Wrong Answers: {{ stats.qwrong }}</p>\n  <p>Unanswered: {{ stats.qnotanswered }}</p>\n  <!-- <button (click)=\"showAnswers()\">Show Answers</button> -->\n</div>\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}