{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/qlpic101.service\";\nexport class ExamComponent {\n  constructor(qs) {\n    this.qs = qs;\n    this.ql101all = [];\n    this.currentQuestion = -1;\n    this.ql101all = this.qs.getallAll().filter(q => q.qtyp == 'mc');\n    this.ql101all.map(q => {\n      q.qtyp == 'mc';\n      q.qanswers.map(a => a.givenans = false);\n    });\n    this.ql101all.map(q => {\n      q.qtyp == 'sc';\n      q.qanswers.map(a => a.givenans = false);\n    });\n    this.ql101all.map(q => {\n      q.qtyp == 'fi';\n      q.qgiventxt = '';\n    });\n    this.currentQuestion = 0;\n    this.question = this.ql101all[this.currentQuestion];\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n      this.question = this.ql101all[this.currentQuestion];\n      this.resetGivenAnswers();\n    } else {\n      // Tüm soruları geçtiğimizde yapılacak işlemler burada olabilir.\n      // Örneğin, sonuçları değerlendirme veya başka bir işlem yapma.\n      console.log(\"Tüm soruları tamamladınız!\");\n    }\n  }\n  resetGivenAnswers() {\n    this.question.qanswers.forEach(answer => {\n      answer.givenans = false;\n    });\n    this.question.qgiventxt = '';\n  }\n}\n_class = ExamComponent;\n_class.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Qlpic101Service));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-exam\"]],\n  decls: 1,\n  vars: 0,\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"merhaba\");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ExamComponent","constructor","qs","ql101all","currentQuestion","getallAll","filter","q","qtyp","map","qanswers","a","givenans","qgiventxt","question","nextQuestion","length","resetGivenAnswers","console","log","forEach","answer","i0","ɵɵdirectiveInject","i1","Qlpic101Service","selectors","decls","vars","template","ExamComponent_Template","rf","ctx","ɵɵtext"],"sources":["/home/semus/Schreibtisch/2108/src/app/exam/exam.component.ts","/home/semus/Schreibtisch/2108/src/app/exam/exam.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { McQuery } from '../interfaces/mc-query';\nimport { Statistics } from '../interfaces/statistics';\nimport { Qlpic101Service } from '../services/qlpic101.service';\n// import { StatsService } from '../services/stats.service';\nimport { ScQuery } from '../interfaces/sc-query';\nimport { FiQuery } from '../interfaces/fi-query';\nimport { LceQuery } from '../interfaces/lcequery';\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent  {\n  ql101all: LceQuery[] = []\n  question: LceQuery\n  currentQuestion: number=-1\n\n\n  constructor(private qs: Qlpic101Service){\n    this.ql101all=this.qs.getallAll().filter((q)=> q.qtyp=='mc');\n    this.ql101all.map(q=>{q.qtyp=='mc';q.qanswers.map(a=>a.givenans=false)})\n    this.ql101all.map(q=>{q.qtyp=='sc';q.qanswers.map(a=>a.givenans=false)})\n    this.ql101all.map(q=>{q.qtyp=='fi';q.qgiventxt=''})\n    this.currentQuestion=0\n    this.question=this.ql101all[this.currentQuestion]\n\n    \n\n  }\n  nextQuestion() {\n    if (this.currentQuestion < this.ql101all.length - 1) {\n      this.currentQuestion++;\n      this.question = this.ql101all[this.currentQuestion];\n      this.resetGivenAnswers();\n    } else {\n      // Tüm soruları geçtiğimizde yapılacak işlemler burada olabilir.\n      // Örneğin, sonuçları değerlendirme veya başka bir işlem yapma.\n      console.log(\"Tüm soruları tamamladınız!\");\n    }\n  }\n  \n  resetGivenAnswers() {\n    this.question.qanswers.forEach(answer => {\n      answer.givenans = false;\n    });\n    this.question.qgiventxt = '';\n  }\n  \n \n\n}","merhaba"],"mappings":";;;AAaA,OAAM,MAAOA,aAAa;EAMxBC,YAAoBC,EAAmB;IAAnB,KAAAA,EAAE,GAAFA,EAAE;IALtB,KAAAC,QAAQ,GAAe,EAAE;IAEzB,KAAAC,eAAe,GAAS,CAAC,CAAC;IAIxB,IAAI,CAACD,QAAQ,GAAC,IAAI,CAACD,EAAE,CAACG,SAAS,EAAE,CAACC,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAE,IAAI,CAAC;IAC5D,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACF,CAAC,IAAE;MAACA,CAAC,CAACC,IAAI,IAAE,IAAI;MAACD,CAAC,CAACG,QAAQ,CAACD,GAAG,CAACE,CAAC,IAAEA,CAAC,CAACC,QAAQ,GAAC,KAAK,CAAC;IAAA,CAAC,CAAC;IACxE,IAAI,CAACT,QAAQ,CAACM,GAAG,CAACF,CAAC,IAAE;MAACA,CAAC,CAACC,IAAI,IAAE,IAAI;MAACD,CAAC,CAACG,QAAQ,CAACD,GAAG,CAACE,CAAC,IAAEA,CAAC,CAACC,QAAQ,GAAC,KAAK,CAAC;IAAA,CAAC,CAAC;IACxE,IAAI,CAACT,QAAQ,CAACM,GAAG,CAACF,CAAC,IAAE;MAACA,CAAC,CAACC,IAAI,IAAE,IAAI;MAACD,CAAC,CAACM,SAAS,GAAC,EAAE;IAAA,CAAC,CAAC;IACnD,IAAI,CAACT,eAAe,GAAC,CAAC;IACtB,IAAI,CAACU,QAAQ,GAAC,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC;EAInD;EACAW,YAAYA,CAAA;IACV,IAAI,IAAI,CAACX,eAAe,GAAG,IAAI,CAACD,QAAQ,CAACa,MAAM,GAAG,CAAC,EAAE;MACnD,IAAI,CAACZ,eAAe,EAAE;MACtB,IAAI,CAACU,QAAQ,GAAG,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC;MACnD,IAAI,CAACa,iBAAiB,EAAE;KACzB,MAAM;MACL;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;;EAE7C;EAEAF,iBAAiBA,CAAA;IACf,IAAI,CAACH,QAAQ,CAACJ,QAAQ,CAACU,OAAO,CAACC,MAAM,IAAG;MACtCA,MAAM,CAACT,QAAQ,GAAG,KAAK;IACzB,CAAC,CAAC;IACF,IAAI,CAACE,QAAQ,CAACD,SAAS,GAAG,EAAE;EAC9B;;SAlCWb,aAAa;;mBAAbA,MAAa,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;;QAAbzB,MAAa;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb1BT,EAAA,CAAAW,MAAA,cAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}