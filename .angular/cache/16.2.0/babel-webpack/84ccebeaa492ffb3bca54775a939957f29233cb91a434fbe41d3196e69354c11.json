{"ast":null,"code":"var _class;\nimport * as qlpic101allJson from \"../../assets/LPI-2019-1-101d-QA-all.json\";\nimport * as qlpic101mcJson from \"../../assets/LPI-2019-1-101d-QA-mc.json\";\nimport * as qlpic101scJson from \"../../assets/LPI-2019-1-101d-QA-sc.json\";\nimport * as qlpic101fiJson from \"../../assets/LPI-2019-1-101d-QA-fi.json\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./qlpic101.service\";\nexport class StatsService {\n  constructor(ql101mc) {\n    this.ql101mc = ql101mc;\n    this.ql101all = qlpic101allJson;\n    this.ql101mcall = qlpic101mcJson;\n    this.ql101scall = qlpic101scJson;\n    this.ql101fiall = qlpic101fiJson;\n    this.qfound = [];\n    this.answered = [];\n    this.wronganswered = [];\n    this.qanzahl = -1;\n    this.qchkfalse = -1;\n    this.qanwered = false;\n    this.ql101all = this.ql101mc.getallAll();\n    this.ql101mcall = this.ql101mc.getallMc();\n    this.ql101scall = this.ql101mc.getallSc();\n    this.ql101fiall = this.ql101mc.getallFi();\n    this.stats = {\n      qmaxnumber: 0,\n      qanswered: 0,\n      qwrong: 0,\n      qcorrect: 0,\n      qnotanswered: 0\n    };\n  }\n  shuffleAll() {\n    console.log('in shuffle');\n  }\n  nullStats() {\n    this.stats.qmaxnumber = 0;\n    this.stats.qanswered = 0;\n    this.stats.qwrong = 0;\n    this.stats.qcorrect = 0;\n    this.stats.qnotanswered = 0;\n  }\n  resetStatsAll() {\n    this.nullStats();\n    return this.calcStatsAll();\n  }\n  resetStatsMc() {\n    this.nullStats();\n    return this.calcStatsMc();\n  }\n  resetStatsSc() {\n    this.nullStats();\n    return this.calcStatsSc();\n  }\n  resetStatsFi() {\n    this.nullStats();\n    return this.calcStatsFi();\n  }\n  calcStatsAll() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101all.length;\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    let mcs = this.ql101all.filter(q => q.qtyp === 'mc').filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length;\n    let scs = this.ql101all.filter(q => q.qtyp === 'sc').filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length;\n    let fis = this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qgiventxt != '').length;\n    this.stats.qanswered = mcs + scs + fis;\n    console.log(mcs, scs, fis);\n    // // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - mcs - scs - fis;\n    // // correct answered\n    // mcs not correct\n    let notcorrectmcs = this.ql101all.filter(q => q.qtyp === 'mc').filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length;\n    console.log('mcs n c:', notcorrectmcs);\n    // scs not correct\n    let notcorrectscs = this.ql101all.filter(q => q.qtyp === 'sc').filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length;\n    console.log('scs n c:', notcorrectscs);\n    // fis not correct\n    let notcorrectfis = this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qanswers.findIndex(a => a.txt.find(t => t === q.qgiventxt))).length;\n    console.log('fis n c:', notcorrectfis);\n    this.stats.qcorrect = this.stats.qmaxnumber - notcorrectmcs - notcorrectscs - notcorrectfis;\n    // // wrong answered\n    this.stats.qwrong = this.stats.qnotanswered - (notcorrectmcs + notcorrectscs + notcorrectfis);\n    return this.stats;\n  }\n  calcStatsMc() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101mcall.length;\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    if (this.ql101mcall.findIndex(q => q.qanswers.findIndex(a => a.givenans === true)) > 0) {\n      this.stats.qanswered = this.ql101mcall.filter(q => q.qanswers.findIndex(a => a.givenans === true) != -1).length;\n    }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n    // correct answered\n    // 1. finde beantwortete fragen\n    this.answered = this.ql101mcall.filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1);\n    // 2. finde fragen mit nicht 'correct != givenans' => falsch beantwortet sind\n    this.wronganswered = this.answered.filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1);\n    this.stats.qcorrect = this.answered.length - this.wronganswered.length;\n    // wrong answered\n    this.stats.qwrong = this.wronganswered.length;\n    return this.stats;\n  }\n  calcStatsSc() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101scall.length;\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    if (this.ql101scall.findIndex(q => q.qanswers.findIndex(a => a.givenans === true)) > 0) {\n      this.stats.qanswered = this.ql101scall.filter(q => q.qanswers.findIndex(a => a.givenans === true) != -1).length;\n    }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n    // correct answered\n    // 1. finde beantwortete fragen\n    this.answered = this.ql101scall.filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1);\n    // 2. finde fragen mit nicht 'correct != givenans' => falsch beantwortet sind\n    this.wronganswered = this.answered.filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1);\n    this.stats.qcorrect = this.answered.length - this.wronganswered.length;\n    // wrong answered\n    this.stats.qwrong = this.wronganswered.length;\n    return this.stats;\n  }\n  calcStatsFi() {\n    // nullStats(){\n    //   this.stats.qmaxnumber = 0;\n    //   this.stats.qanswered = 0;\n    //   this.stats.qwrong = 0;\n    //   this.stats.qcorrect = 0;\n    //   this.stats.qnotanswered = 0;\n    // }\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101fiall.length;\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    // if (this.ql101fiall.findIndex(q => q.qgiventxt != '')) {\n    this.stats.qanswered = this.ql101fiall.filter(q => q.qgiventxt != '').length;\n    // }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n    // correct answered\n    this.stats.qcorrect = this.ql101fiall.filter(q => q.qanswers.find(a => a.txt.find(t => t === q.qgiventxt))).length;\n    // this.stats.qcorrect = this.answered.length - this.wronganswered.length\n    // wrong answered\n    this.stats.qwrong = this.stats.qanswered - this.stats.qcorrect;\n    return this.stats;\n  }\n}\n_class = StatsService;\n_class.ɵfac = function StatsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Qlpic101Service));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["qlpic101allJson","qlpic101mcJson","qlpic101scJson","qlpic101fiJson","StatsService","constructor","ql101mc","ql101all","ql101mcall","ql101scall","ql101fiall","qfound","answered","wronganswered","qanzahl","qchkfalse","qanwered","getallAll","getallMc","getallSc","getallFi","stats","qmaxnumber","qanswered","qwrong","qcorrect","qnotanswered","shuffleAll","console","log","nullStats","resetStatsAll","calcStatsAll","resetStatsMc","calcStatsMc","resetStatsSc","calcStatsSc","resetStatsFi","calcStatsFi","length","mcs","filter","q","qtyp","qanswers","findIndex","a","givenans","scs","fis","qgiventxt","notcorrectmcs","correct","notcorrectscs","notcorrectfis","txt","find","t","i0","ɵɵinject","i1","Qlpic101Service","factory","ɵfac","providedIn"],"sources":["D:\\Proje\\1908\\src\\app\\services\\stats.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Qlpic101Service } from './qlpic101.service';\nimport { Statistics } from '../interfaces/statistics';\n\n\nimport * as qlpic101allJson from \"../../assets/LPI-2019-1-101d-QA-all.json\";\nimport { LceQuery} from '../interfaces/lcequery';\nimport * as qlpic101mcJson from \"../../assets/LPI-2019-1-101d-QA-mc.json\";\nimport { McQuery } from '../interfaces/mc-query';\nimport * as qlpic101scJson from \"../../assets/LPI-2019-1-101d-QA-sc.json\";\nimport { ScQuery } from '../interfaces/sc-query';\nimport * as qlpic101fiJson from \"../../assets/LPI-2019-1-101d-QA-fi.json\";\nimport { FiQuery } from '../interfaces/fi-query';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatsService {\n \n  ql101all: LceQuery[] = qlpic101allJson\n  ql101mcall: McQuery[] = qlpic101mcJson\n  ql101scall: ScQuery[] = qlpic101scJson\n  ql101fiall: FiQuery[] = qlpic101fiJson\n\n  qfound: LceQuery[] = []\n  answered: LceQuery[] = []\n  wronganswered: LceQuery[] = []\n\n  qanzahl: number = -1;\n  qchkfalse: number = -1;\n  qanwered: boolean = false;\n\n  stats: Statistics;\n\n  constructor(\n    private ql101mc: Qlpic101Service,\n  ) {\n    this.ql101all = this.ql101mc.getallAll()\n    this.ql101mcall = this.ql101mc.getallMc()\n    this.ql101scall = this.ql101mc.getallSc()\n    this.ql101fiall = this.ql101mc.getallFi()\n\n    this.stats = {\n      qmaxnumber: 0,\n      qanswered: 0,\n      qwrong: 0,\n      qcorrect: 0,\n      qnotanswered: 0\n    }\n  }\n\n  shuffleAll() {\n    console.log('in shuffle')\n  }\n\n  nullStats() {\n    this.stats.qmaxnumber = 0;\n    this.stats.qanswered = 0;\n    this.stats.qwrong = 0;\n    this.stats.qcorrect = 0;\n    this.stats.qnotanswered = 0;\n  }\n\n  resetStatsAll() {\n    this.nullStats()\n    return this.calcStatsAll();\n  }\n\n  resetStatsMc() {\n    this.nullStats()\n    return this.calcStatsMc();\n  }\n\n  resetStatsSc() {\n    this.nullStats()\n    return this.calcStatsSc();\n  }\n\n  resetStatsFi() {\n    this.nullStats()\n    return this.calcStatsFi();\n  }\n\n  calcStatsAll() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101all.length\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    let mcs =\n      this.ql101all.filter(q => q.qtyp === 'mc').\n        filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length\n\n    let scs =\n      this.ql101all.filter(q => q.qtyp === 'sc')\n        .filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1).length\n\n    let fis =\n      this.ql101all.filter(q => q.qtyp === 'fi').filter(q => q.qgiventxt != '').length\n\n    this.stats.qanswered = mcs + scs + fis\n    console.log(mcs, scs, fis)\n\n    // // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - mcs - scs - fis\n\n    // // correct answered\n    // mcs not correct\n    let notcorrectmcs = this.ql101all.filter(q => q.qtyp === 'mc')\n      .filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length\n    console.log('mcs n c:', notcorrectmcs)\n    // scs not correct\n    let notcorrectscs = this.ql101all.filter(q => q.qtyp === 'sc')\n      .filter(q => q.qanswers.findIndex(a => a.correct != a.givenans) > -1).length\n    console.log('scs n c:', notcorrectscs)\n    // fis not correct\n    let notcorrectfis = this.ql101all.filter(q => q.qtyp === 'fi')\n      .filter(q => q.qanswers.findIndex(a => a.txt.find(t => t === q.qgiventxt))).length\n    console.log('fis n c:', notcorrectfis)\n\n    this.stats.qcorrect = this.stats.qmaxnumber - notcorrectmcs - notcorrectscs - notcorrectfis\n    // // wrong answered\n    this.stats.qwrong = this.stats.qnotanswered - (notcorrectmcs + notcorrectscs + notcorrectfis)\n\n    return this.stats;\n  }\n\n  calcStatsMc() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101mcall.length\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    if (this.ql101mcall.findIndex(q => q.qanswers.findIndex(a => a.givenans === true))\n      > 0) {\n      this.stats.qanswered = this.ql101mcall.filter(q => q.qanswers.findIndex(\n        a => a.givenans === true) != -1).length\n    }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n    // correct answered\n    // 1. finde beantwortete fragen\n    this.answered = this.ql101mcall.filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1)\n    // 2. finde fragen mit nicht 'correct != givenans' => falsch beantwortet sind\n    this.wronganswered = this.answered.filter(\n      q => q.qanswers.findIndex(\n        a => a.correct != a.givenans) > -1)\n    this.stats.qcorrect = this.answered.length - this.wronganswered.length\n    // wrong answered\n    this.stats.qwrong = this.wronganswered.length\n\n    return this.stats;\n  }\n\n  calcStatsSc() {\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101scall.length\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    if (this.ql101scall.findIndex(q => q.qanswers.findIndex(a => a.givenans === true))\n      > 0) {\n      this.stats.qanswered = this.ql101scall.filter(q => q.qanswers.findIndex(\n        a => a.givenans === true) != -1).length\n    }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n\n    // correct answered\n    // 1. finde beantwortete fragen\n    this.answered = this.ql101scall.filter(q => q.qanswers.findIndex(a => a.givenans === true) > -1)\n    // 2. finde fragen mit nicht 'correct != givenans' => falsch beantwortet sind\n    this.wronganswered = this.answered.filter(\n      q => q.qanswers.findIndex(\n        a => a.correct != a.givenans) > -1)\n    this.stats.qcorrect = this.answered.length - this.wronganswered.length\n    // wrong answered\n    this.stats.qwrong = this.wronganswered.length\n    return this.stats;\n  }\n\n  calcStatsFi() {\n    // nullStats(){\n    //   this.stats.qmaxnumber = 0;\n    //   this.stats.qanswered = 0;\n    //   this.stats.qwrong = 0;\n    //   this.stats.qcorrect = 0;\n    //   this.stats.qnotanswered = 0;\n    // }\n    // numbers of questions\n    this.stats.qmaxnumber = this.ql101fiall.length\n    // console.log('Anzahl Fragen: ', this.stats.qmaxnumber)\n    // answered?\n    // if (this.ql101fiall.findIndex(q => q.qgiventxt != '')) {\n    this.stats.qanswered = this.ql101fiall.filter(q => q.qgiventxt != '').length\n    // }\n    // not answered\n    this.stats.qnotanswered = this.stats.qmaxnumber - this.stats.qanswered;\n    // correct answered\n    this.stats.qcorrect = this.ql101fiall.filter(\n      q => q.qanswers.find(\n        a => a.txt.find(t => t === q.qgiventxt))).length\n    // this.stats.qcorrect = this.answered.length - this.wronganswered.length\n    // wrong answered\n    this.stats.qwrong = this.stats.qanswered - this.stats.qcorrect\n    return this.stats;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}